length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <= ('My', 'name', 'is')
my_char <= ("My", "name", "is")
my_char <= c('My', 'name', 'is')
my_char <- c('My', 'name', 'is')
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, 'Michael')
my_name
paste(my_name, ' ')
paste(my_name, collapse = ' ')
paste('Hello', 'world!', sep = " ")
paste(c(1:3), c('X', 'Y', 'Z'), sep = ' ')
paste(1:3, c('X', 'Y', 'Z'), sep = ' ')
paste(1:3, c('X', 'Y', 'Z'), sep = '')
paste(LETTERS, 1:4, sep = '')
paste(LETTERS, 1:4, sep = '-')
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z < rep(NA, 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_date == NA
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(1,3,5)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 100, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
bect['bar']
vect['bar']
vect[c('foo','bar')]
my_vector <- c(1:20)
my_vector <- c(1,20)
my_vector <- 1:20
vector
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, mymatrix2)
identical(my_matrix, my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c('patient', 'age', 'weight', 'bp', 'rating', 'test')
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!(5 = 7)
5 != 7
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(std, c(1.4,3.6,7.9,8.8))
evaluate(stdev, c(1.4,3.6,7.9,8.8))
?std
?stddev
??stddev
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste('Programming','is','fun!')
submit()
telegram('Testing')
submit()
mad_libs(place = 'Cleveland', adjective = 'sweet', noun = 'cat')
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
View(flag_shapes)
View(flag_shapes)
shape_mat <- sapply(flag_shapes, range)
shape_,at
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lappy(unique_vales, length)
lapply(unique_vales, length)
lapply(unique_values, length)
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vales, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol()
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
table(flips)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- rbinom(n = 100, size = 100, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
mypois
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date('1969-01-01')
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- 'October 17, 1986 08:24'
?strptime
t4 <- strptime(t3, '%B %d, %Y %H:%M')
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time() - t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = 'Speed')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance', main = 'My Plot')
plot(x = cars$speed, y = cars$dist, main = 'My Plot')
plot(cars, main = 'My Plot')
?plot
plot(cars, sub = 'My Plot Subtitle')
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2
)
data(mtcars)
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
nxt()
data(cars)
cars
cars$mpgCity
myMPG <- cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
bye()
swirl()
table(myMPG)
19
range(cars$price)
61.9 - 7.4
var(cars$price)
sd(cars$price)
10
12
13
14
9
8
20
10
25
4
summary(cars$price)
bye()
swirl()
redwine_df <- read.csv('wineQualityReds.csv')
setwd("F:/Dropbox/Courses/00 Nanodegree -- Data Analyst/P4 Explore and Summarize Data/P4-Explore-and-Summarize-Data")
redwine_df <- read.csv('wineQualityReds.csv')
str(redwine_df)
head(redwine_df)
summary(redwine_df)
ggplot(x = fixed.acidity, data = redwine_df) +
geom_histogram()
library(ggplot2)
library(ggplot)
ggplot(x = fixed.acidity, data = redwine_df) +
geom_histogram()
View(redwine_df)
ggplot(aes(x = fixed.acidity), data = redwine_df) +
geom_histogram()
?melt
install.packages('reshape')
library(reshape)
?melt
d <- melt(redwine_df)
ggplot(d, aes(x = value)) +
facet_wrap(~variable, scales = 'free_x') +
geom_histogram()
ggplot(d, aes(x = value)) +
facet_wrap(~variable, scales = 'free') +
geom_histogram()
View(redwine_df)
d <- melt(redwine_df[,2:])
d <- melt(redwine_df[,2:13])
ggplot(d, aes(x = value)) +
facet_wrap(~variable, scales = 'free') +
geom_histogram()
ggplot(aes(x = fixed.acidity), data = redwine_df) +
geom_histogram()
ggplot(aes(x = fixed.acidity), data = redwine_df, binwidth = 0.5) +
geom_histogram()
ggplot(aes(x = fixed.acidity), data = redwine_df, bins = 20) +
geom_histogram()
ggplot(aes(x = fixed.acidity), data = redwine_df) +
geom_histogram(bins = 20)
ggplot(aes(x = fixed.acidity), data = redwine_df) +
geom_histogram(binwidth = 0.5)
ggplot(aes(x = fixed.acidity), data = redwine_df) +
geom_histogram(binwidth = 0.1)
ggplot(aes(x = fixed.acidity), data = redwine_df) +
geom_histogram(binwidth = 0.25)
ggplot(aes(x = fixed.acidity), data = redwine_df) +
geom_histogram(binwidth = 0.5)
ggplot(d, aes(x = value)) +
facet_wrap(~variable, scales = 'free') +
geom_histogram(bins = 30)
ggplot(d, aes(x = value)) +
facet_wrap(~variable, scales = 'free') +
geom_histogram(bins = 50)
ggplot(d, aes(x = value)) +
facet_wrap(~variable, scales = 'free') +
geom_histogram(bins = 35)
boxplot(red_wine_df[,2:13])
boxplot(redwine_df[,2:13])
boxplot(redwine_df[,2:13]) +
coord_cartesian(ylim = c(0,100))
boxplot(data = d, value~variable)
boxplot(data = d, value~variable, ylim = c(0,100))
boxplot(data = d, value~variable)
boxplot(x = fixed.acidity, data = redwine_df)
boxplot(fixed.acidity, data = redwine_df)
boxplot(redwine_df$fixed.acidity)
ggplot(d, aes(factor(variable), value)) +
geom_boxplot() +
facet_wrap(~variable, scale = 'free')
ggplot(d, aes(factor(variable), value)) +
geom_boxplot() +
facet_wrap(~variable, scale = 'free') +
coord_flip()
ggplot(d, aes(factor(variable), value)) +
geom_boxplot() +
facet_wrap(~variable) +
coord_flip()
ggplot(d, aes(factor(variable), value)) +
geom_boxplot() +
facet_wrap(~variable,  scale = 'free')
election08_df <- read.csv('2008election_wv.csv')
election08_df <- read.csv('2008election_wv.csv', row.names = 'tran_id')
election08_df <- read.csv('2008election_wv.csv', row.names = tran_id)
election08_df <- read.csv('2008election_wv.csv', row.names = 17)
election08_df <- read.csv('2008election_wv.csv', row.names = NULL)
View(election08_df)
table(election08_df$cand_id)
qplot(x = cand_id, data = election08_df)
ggplot(aes(x = cand_id), data = election08_df) +
geom_bar()
ggplot(aes(x = cand_id), data = election08_df) +
geom_bar()
ggplot(aes(x = cand_id), data = election08_df) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = contbr_occupation), data = election08_df) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
election08_df <- read.csv('2008election_wv.csv', row.names = 0)
?read.csv
election08_df <- read.csv('2008election_wv.csv', row.names = NULL)
election08_df <- read.csv('2008election_wv.csv', row.names = 1:9330)
election08_df <- read.csv('2008election_wv.csv', row.names = c(1:9330))
election08_df <- read.csv('2008election_wv.csv', row.names = 18
election08_df <- read.csv('2008election_wv.csv', row.names = 18)
table(election08_df$cand_nm)
election08_df <- read.csv('2008election_wv.csv', row.names = 18)
election08_df <- read.csv('2008election_wv.csv', header = T)
election08_df <- read.csv('2008election_wv.csv', header = T, row.names = NULL)
election08_df <- read.csv('2008election_wv.csv', header = T, row.names = NULL)
election08_df <- read.csv('2008election_wv.csv', row.names = 19)
election08_df <- read.csv('2008election_wv.csv', row.names = 18)
election08_df <- read.csv('2008election_wv.csv', row.names = 17)
election08_df <- read.csv('2008election_wv.csv', row.names = NULL)
election08_df <- read.csv('2012election_wv.csv', row.names = NULL)
election08_df <- read.csv('2008election_wv.csv', row.names = NULL)
election08_df <- read.csv('ohio.csv', row.names = NULL)
election08_df <- read.csv('ohio.csv', row.names = 1)
election08_df <- read.csv('ohio.csv', row.names = 17)
election08_df <- read.csv('2008election_wv.csv', header = T)
View(election08_df)
ggplot(aes(x = contbr_occupation), data = election08_df) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
table(election08_df$contbr_occupation)
sort(table(election08_df$contbr_occupation))
theme(axis.text.x = element_text(angle = 90, hjust = 1), decreasing = TRUE)
sort(table(election08_df$contbr_occupation), decreasing = TRUE)
class(sort(table(election08_df$contbr_occupation), decreasing = TRUE))
sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:10]
ggplot(aes(x = sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:10]))
ggplot(sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:10])
qplot(sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:10])
sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:10]
sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:10].values
sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:25]
sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25]
barchart(election08_df$contbr_city)
?qplot
qplot(sort(table(election08_df$contbr_occupation), decreasing = TRUE)[1:25])
qplot(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25])
ggplot(aes(x = table(election08_df$contbr_occupation), decreasing = TRUE)[1:25]), data = election08_df) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25]), data = election08_df) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25])) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = as.vector(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25])) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = as.vector(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25]))) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = as.vector(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25]))) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = as.array(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25]))) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
setkey(election08_df, contbr_city)
install.packages('data.table')
setkey(election08_df, contbr_city)
library(data.table)
setkey(election08_df, contbr_city)
election <- data.table(election08_df)
setkey(election, contbr_city)
tt <- election[, list(count=.N), by=contbr_city]
contbr_city.values <- tt[order(count), contbr_city][1:5]
names(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25])
ggplot(aes(x = cand_nm), data = election08_df) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(names(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25]))
ggplot(aes(x = names(sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25])), y = sort(table(election08_df$contbr_city), decreasing = TRUE)[1:25])
election1 <- within(election, contbr_city <- factor(contbr_city, levels=names(sort(table(contbr_city), decreasing=TRUE))))
ggplot(election1, aes(contbr_city)) + geom_bar()
election1 <- within(election, contbr_city <- factor(contbr_city, levels=names(sort(table(contbr_city), decreasing=TRUE))[1:5]))
ggplot(election1, aes(contbr_city)) + geom_bar()
ggplot(election1[contrbr_city != "NA"], aes(contbr_city)) + geom_bar()
ggplot(election1[contbr_city != "NA"], aes(contbr_city)) + geom_bar()
election2 <- within(election, contbr_occupation <- factor(contbr_occupation, levels=names(sort(table(contbr_occupation), decreasing=TRUE))[1:5]))
ggplot(election1[contbr_occupation != "NA"], aes(contbr_occupation)) + geom_bar()
election2 <- within(election, contbr_occupation <- factor(contbr_occupation,levels=names(sort(table(contbr_occupation), decreasing=TRUE))[1:5]))
ggplot(election1[contbr_occupation != "NA"], aes(contbr_occupation)) + geom_bar()
election2 <- within(election, contbr_occupation <- factor(contbr_occupation,levels=names(sort(table(contbr_occupation), decreasing=TRUE))[1:5]))
ggplot(election2[contbr_occupation != "NA"], aes(contbr_occupation)) + geom_bar()
